{"version":3,"file":"post-links-embed/index.js","mappings":"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","sources":["webpack:///./src/post-links-embed/inc/edit.js","webpack:///./src/post-links-embed/inc/read-more.js","webpack:///./src/post-links-embed/inc/save.js","webpack:///external window \"React\"","webpack:///external window [\"wp\",\"blockEditor\"]","webpack:///external window [\"wp\",\"blocks\"]","webpack:///external window [\"wp\",\"components\"]","webpack:///external window [\"wp\",\"element\"]","webpack:///external window [\"wp\",\"i18n\"]","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/post-links-embed/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { PanelBody, TextControl } from '@wordpress/components';\nimport { RichText } from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\nimport ReadMoreLink  from './read-more';\n/**\n * Script for handling the editor section. \n */\nexport const Edit =( { attributes, setAttributes } ) => {\n    const blockProps = useBlockProps();\n    /**\n     * 1. postResults - attribute is used to contain the searched posts from the API and is displayed in InspectorControls. \n     * 2. content - attribute is used to contain the links which are inserted in RichText\n     * 3. keyword - attribute for the search keyword which is typed by the user in the searchbox. \n     * -- This gets reset everytime the component is mounted. \n     */\n    const { postResults, content, keyword  } = attributes;\n\n    /**\n     * This is the method which renders the post links within the Inspector Controls. \n     * ** Sets Attribute of \"postResults\"\n     * @param {JSON} json - \n     */\n    const setPostLinks = ( json ) => {\n        const postLinks = json.map((post, index) => (\n            <React.Fragment key={index}>\n                <a href={post.permalink} \n                    onClick={ (e) => { e.preventDefault(); setAttributes( { content: post } ); } } >\n                    {post.title}\n                </a>\n                <br />\n            </React.Fragment>\n        ));\n        setAttributes( { postResults: postLinks } );\n    }\n    /**\n     * Event handler for the search posts text input field. \n     * \n     * ** Sets Attributes \"postResults\" only if no post is found. \n     * \n     * @param {string} keywords - Search keywords for searching the posts. \n     */\n    const searchPosts = async ( keywords ) => {\n        let host   = 'http://localhost'; \n        let route  = '/wp-json/wp-post-link-post-embed/v1/get';\n        let params = `?type=post&page=1&keyword=${keywords}`;\n        \n        // Set the loading post indicator. \n        setAttributes( { keyword: keywords, postResults: \"Loading...\"} );\n        let response = await fetch( host + route + params );\n\n        // If the post(s) have not been found for any reason, show the error. \n        if( response.status !== 200 ){\n            setAttributes( { postResults: \"No posts founds!\"} );\n        }\n        // Otherwise just process the response. \n        else{\n            let json = await response.json();\n            setPostLinks(json);\n        }\n    }\n    /**\n     * Used to render the default state of the component. \n     */\n    useEffect( async () => {\n        // API configuration for recent posts. \n        let host   = 'http://localhost'; \n        let route  = '/wp-json/wp-post-link-post-embed/v1/get';\n        let params = `?type=post&page=1`;\n        // Get recent posts. \n        let response = await fetch( host + route + params );\n        // If the post(s) have not been found for any reason, show the error. \n        if( response.status !== 200 ){\n            setAttributes( { postResults: \"No posts founds!\"} );\n        }\n        else{\n            let json = await response.json();\n            setPostLinks(json);\n        }\n        // Reset the keywords.\n        setAttributes( { keyword: \"\" } );\n    }, []); \n    return ( \n    <div { ...blockProps }>\n    \n        <InspectorControls>\n            <PanelBody title={ __('Insert Posts Links', 'posts-embed-block') }>\n                <TextControl\n                label=\"Search Posts\"\n                onChange={ searchPosts }\n                value={keyword}\n                />\n                {keyword ? '' : <label><b>Recent posts</b></label>}\n                <div id={\"post-results\"}>{postResults}</div>\n            </PanelBody>\n        </InspectorControls>\n        {<ReadMoreLink href={content.permalink}>{content.title}</ReadMoreLink>}\n\n    </div>\n    );\n}\n\n","import React from 'react';\n\nconst ReadMoreLink = ( props ) => {\n  return <a {...props}>Read More: {props.children}</a>;\n};\n\nexport default ReadMoreLink;\n","/**\n * WordPress dependencies\n */\nimport { RichText } from '@wordpress/block-editor';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { RawHTML } from '@wordpress/element';\nimport ReadMoreLink  from './read-more';\n\n// Save method just renders the content as RawHTML.\nexport const Save = ( { attributes, setAttributes } ) => {\n\tconst { content, keyword } = attributes;\n    const blockProps = useBlockProps.save();\n    return (\n        <div { ...blockProps }> \n             {<ReadMoreLink href={content.permalink}>{content.title}</ReadMoreLink>}\n         </div>\n    );\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { Edit } from './inc/edit';\nimport { Save } from './inc/save'\nimport block  from './block.json';\n\n// Registers the block \nregisterBlockType( block.name, {\n    edit: Edit,\n    save: Save\n} );"],"names":["__","InspectorControls","useBlockProps","PanelBody","TextControl","RichText","useEffect","ReadMoreLink","Edit","attributes","setAttributes","blockProps","postResults","content","keyword","setPostLinks","json","postLinks","map","post","index","createElement","React","Fragment","key","href","permalink","onClick","e","preventDefault","title","searchPosts","keywords","host","route","params","response","fetch","status","label","onChange","value","id","props","children","RawHTML","Save","save","registerBlockType","block","name","edit"],"sourceRoot":""}